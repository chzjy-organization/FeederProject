apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion gradle.sdk.compileSdkVersion
    buildToolsVersion gradle.sdk.buildToolsVersion
    signingConfigs {
        PunuoClient {
            storeFile file('../hangzhoupunuo.jks')
            storePassword '123456'
            keyAlias = 'hangzhoupunuokeystore'
            keyPassword '123456'
        }
    }
    defaultConfig {
        multiDexEnabled true
        applicationId gradle.sdk.packageName
        minSdkVersion gradle.sdk.minSdkVersion
        targetSdkVersion gradle.sdk.targetSdkVersion
        versionCode gradle.sdk.versionCode
        versionName gradle.sdk.versionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.PunuoClient
        }
        debug {
            signingConfig signingConfigs.PunuoClient
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {

    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "feed_signed.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "feed_debug.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':basesdk')
    implementation project(':module_home')
    implementation project(':module_compat')
    implementation project(':module_message')
    implementation project(':module_member')
    implementation project(':module_circle')
    implementation project(':module_feed')
    implementation project(':module_video')
}
